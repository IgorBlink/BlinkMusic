import mongoose, { Schema, Document } from 'mongoose';

export interface IAnnotation extends Document {
  trackId: mongoose.Types.ObjectId;
  lyricLine: string;
  annotation: string;
  upvotes: number;
  downvotes: number;
  generated: boolean;  // Indicates if the annotation was generated by AI
  createdAt: Date;
  updatedAt: Date;
}

const AnnotationSchema: Schema = new Schema(
  {
    trackId: {
      type: mongoose.Schema.Types.ObjectId,
      ref: 'Track',
      required: true,
      index: true
    },
    lyricLine: {
      type: String,
      required: true,
      index: true
    },
    annotation: {
      type: String,
      required: true
    },
    upvotes: {
      type: Number,
      default: 0
    },
    downvotes: {
      type: Number,
      default: 0
    },
    generated: {
      type: Boolean,
      default: true
    }
  },
  {
    timestamps: true
  }
);

// Creating a compound index for trackId and lyricLine for efficient lookups
AnnotationSchema.index({ trackId: 1, lyricLine: 1 }, { unique: false });

export const Annotation = mongoose.model<IAnnotation>('Annotation', AnnotationSchema);

export default Annotation; 