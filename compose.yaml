version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: blinkmusic-backend
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      # Добавьте другие переменные окружения для бэкенда (например, DB_URI, JWT_SECRET и т.д.)
    volumes:
      - ./backend:/app
      - /app/node_modules
    restart: unless-stopped
    networks:
      - blinkmusic-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: blinkmusic-frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://150.241.95.14/api
      - NODE_ENV=production
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - blinkmusic-network
    # Убираем прямое проксирование порта, так как теперь будем использовать Nginx

  nginx:
    image: nginx:alpine
    container_name: blinkmusic-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - blinkmusic-network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    container_name: blinkmusic-certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - nginx
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - blinkmusic-network

networks:
  blinkmusic-network:
    driver: bridge 